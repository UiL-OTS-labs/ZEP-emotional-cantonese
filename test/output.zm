/******************************************************************************\
FILE:           output.zm
AUTHOR:         Theo Veenker <theo.veenker@beexy.nl>
ADAPTED BY:     -

DESCRIPTION:

Defines the formats of output table(s).


HISTORY:
2011-10-25 TV   Created.

\******************************************************************************/


// Test output table record.
record TestOutput
{
    int         trialnum;           // trial number
    int         id;                 // item id
    ItemType    emotion;            // item emotion
    
    string      pretarget_fname;    // pre filler filename
    string      pretarget_cn;       // pre sentence string 
    string      pretarget_en;       // target word
    string      pretarget_pinyin;   //
    
    string      target_fname;       //
    string      target_cn;          //
    string      target_en;
    string      target_pinyin;

    string      posttarget_fname;   // target_identifier
    string      posttarget_cn;
    string      posttarget_en;
    string      posttarget_pinyin;
   
    int         correct_tone;       // which was the correct tone
    
    int         tone_chosen;
    bool        answer_correct;
    
    int         value;          // response value: 0=no, 1=yes, -1=timeout
    int         rt;             // response time [ms]
    int         correct;        // correct response: 0=no, 1=yes, -1=n.a.
}

// id;emotion;pretarget_fname;pretarget_ch;pretarget_en;pretarget_pinyin;
//target_fname;target_ch;target_en;target_pinyin;posttarget_fname;posttarget_ch;posttarget_pinyin;
//correct_tone

// Test output table.
TestOutput[..] test_output;


//------------------------------------------------------------------------------


// Appends one row of data to test output table.
void test_output_append(TestOutput data)
{
    test_output.size = test_output.size + 1;
    test_output[test_output.size-1] = data;
}


// Writes test output table contents to CSV file and clears the table.
void test_output_save()
{
    // Append table to CSV file (create if non-existent). The filename format
    // is: <dbname>/<dbnum>/<expname>/<phasename>/ses<sesid>-<tblnum>.csv
    string fn = expdb.experiment.session.create_table(namespace_name, 1);
    test_output.append(fn, namespace_name + ": test results");
    test_output.size = 0;
}
